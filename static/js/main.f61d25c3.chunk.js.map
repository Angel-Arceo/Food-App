{"version":3,"sources":["components/Search/Search.jsx","components/filters/Filters.jsx","components/foodCard/FoodCard.jsx","hooks/useFetch.js","const.js","helpers/uniqueID.js","components/randomRecipes/RandomRecipes.jsx","components/iconComponent/Icon.jsx","components/bottomNav/BottomNav.jsx","components/recipeCard/RecipeCard.jsx","components/similarRecipes/SimilarRecipes.jsx","pages/Home/Home.jsx","components/recipeHeader/RecipeHeader.jsx","pages/Recipe/Recipe.jsx","App.jsx","index.js"],"names":["Search","props","inputSearch","useRef","onClick","onSearch","current","value","xmlns","class","width","height","viewBox","stroke","fill","d","cx","cy","r","x1","y1","x2","y2","type","placeholder","ref","Filters","filterButton","className","FoodCard","data","title","image","to","src","alt","substr","useFetch","url","useState","setData","isPending","setIsPending","error","setError","useEffect","a","fetch","res","ok","FetchError","status","statusText","json","err","getData","params","Error","captureStackTrace","this","constructor","name","jsonObj","proto","Object","getPrototypeOf","getOwnPropertyNames","key","descriptor","getOwnPropertyDescriptor","get","API_KEY","uniqueID","RandomRecipes","cards","setCards","recipes","map","path","process","concat","Icon","color","style","defaultProps","BottomNav","RecipeCard","img","setImg","summary","setSummary","id","replace","SimilarRecipes","recipeCards","setRecipeCards","Home","query","console","log","RecipeHeader","Recipe","App","basename","render","location","TransitionGroup","CSSTransition","appear","timeout","enter","exit","classNames","exact","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f61d25c3.chunk.js","sourcesContent":["import React, { Fragment, useRef } from 'react';\r\nimport './Search.css';\r\n\r\nconst Search = (props) => {\r\n    const inputSearch = useRef(null);\r\n\r\n    const handleClick = () => {\r\n        props.onSearch(inputSearch.current.value);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <button onClick={handleClick}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-search\" width=\"25\" height=\"25\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"#FFF\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n                    <circle cx=\"10\" cy=\"10\" r=\"7\" />\r\n                    <line x1=\"21\" y1=\"21\" x2=\"15\" y2=\"15\" />\r\n                </svg>\r\n            </button>\r\n            <input type=\"text\" placeholder=\"Search\" ref={inputSearch} />\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Search;","import React, { useRef } from 'react'\r\nimport './Filters.css';\r\n\r\n\r\n\r\nconst Filters = () => {\r\n    const filterButton = useRef(null);\r\n\r\n    return (\r\n        <button className=\"filters\" ref={filterButton}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-adjustments-horizontal\" width=\"25\" height=\"25\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"#ffffff\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n                <circle cx=\"14\" cy=\"6\" r=\"2\" />\r\n                <line x1=\"4\" y1=\"6\" x2=\"12\" y2=\"6\" />\r\n                <line x1=\"16\" y1=\"6\" x2=\"20\" y2=\"6\" />\r\n                <circle cx=\"8\" cy=\"12\" r=\"2\" />\r\n                <line x1=\"4\" y1=\"12\" x2=\"6\" y2=\"12\" />\r\n                <line x1=\"10\" y1=\"12\" x2=\"20\" y2=\"12\" />\r\n                <circle cx=\"17\" cy=\"18\" r=\"2\" />\r\n                <line x1=\"4\" y1=\"18\" x2=\"15\" y2=\"18\" />\r\n                <line x1=\"19\" y1=\"18\" x2=\"20\" y2=\"18\" />\r\n            </svg>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Filters;","import React from 'react'\r\nimport './FoodCard.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst FoodCard = ({data}) => {\r\n    const { title, image } = data;\r\n\r\n    return (\r\n        <Link to=\"/recipe\" >\r\n            <div className=\"Food-Card\">\r\n                <img className=\"Food-Card--img\" src={image} alt={title} />\r\n                <div className=\"Food-Card--title\">\r\n                    <h2>{`${title.substr(0,55)}..`}</h2>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default FoodCard;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport default function useFetch(url) {\r\n    const [data, setData] = useState(null);\r\n    const [isPending, setIsPending] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            try {\r\n                const res = await fetch(url);\r\n                if (!res.ok) {\r\n                    /* eslint-disable-next-line no-throw-literal */\r\n                    throw new FetchError({\r\n                        //err: true, //promoted as getter\r\n                        status: res.status,\r\n                        statusText: res.statusText\r\n                            ? res.statusText\r\n                            : \"An error has ocurred\",\r\n                    });\r\n                }\r\n                const data = await res.json();\r\n\r\n                setData(data);\r\n                setIsPending(false);\r\n                setError({ err: false });\r\n            } catch (e) {\r\n                setError(e);\r\n                setIsPending(true);\r\n            }\r\n        }\r\n        getData();\r\n    }, [url]);\r\n\r\n    return {\r\n        data,\r\n        isPending,\r\n        error,\r\n    };\r\n}\r\n\r\n/**\r\n * Represents an inmutable HTTP remote fetch error.\r\n * It could act as base class of other more specific.\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#custom_error_types\r\n */\r\nexport class FetchError extends Error {\r\n    // as private fields (encapsulation)\r\n    #status;\r\n    #statusText;\r\n\r\n    constructor({ status, statusText }, ...params) {\r\n        // provide toString() message and\r\n        // pass remaining arguments (including vendor specific ones) to parent constructor\r\n        super(`E${status}: ${statusText}`, ...params);\r\n\r\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\r\n        if (Error.captureStackTrace) {\r\n            Error.captureStackTrace(this, FetchError);\r\n        }\r\n\r\n        this.#status = status;\r\n        this.#statusText = statusText;\r\n    }\r\n\r\n    /**\r\n     * The inmutable name error itself with extensibility support.\r\n     * ex. Eg in this context: `FetchError`.\r\n     * @return string\r\n     */\r\n    get name() {\r\n        return this.constructor.name;\r\n    }\r\n\r\n    /**\r\n     * Converts this class instances to JSON string.\r\n     * `JSON.stringify()` calls this mixin when marshalling to JSON.\r\n     * @return string\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#tojson_behavior\r\n     */\r\n    toJSON(/*key*/) {\r\n        // start with an empty object\r\n        const jsonObj = {};\r\n        // or emit all properties and all fields\r\n        //        const jsonObj = Object.assign({}, this);\r\n\r\n        // add all getter properties\r\n        const proto = Object.getPrototypeOf(this);\r\n        for (const key of Object.getOwnPropertyNames(proto)) {\r\n            const descriptor = Object.getOwnPropertyDescriptor(proto, key);\r\n            const hasGetter =\r\n                descriptor && typeof descriptor.get === \"function\";\r\n            if (hasGetter) {\r\n                jsonObj[key] = descriptor.get();\r\n            }\r\n        }\r\n\r\n        return jsonObj;\r\n    }\r\n\r\n    /**\r\n     * An exportable JSON mark. Always true.\r\n     * @return bool\r\n     */\r\n    get error() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Property with the HTTP response status code.\r\n     * @return number\r\n     */\r\n    get status() {\r\n        return this.#status;\r\n    }\r\n\r\n    /**\r\n     * Property with the HTTP response status message.\r\n     * @return number\r\n     */\r\n    get statusText() {\r\n        return this.#statusText;\r\n    }\r\n}\r\n","export const API_KEY = \"7cff3793d3024c2b94b14bebaf10a454\";","let current = 0;\r\nexport default function uniqueID() {\r\n    return ++current;\r\n}","import React, { Fragment, useEffect, useState } from 'react'\r\nimport FoodCard from '../foodCard/FoodCard';\r\nimport './RandomRecipes.css';\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport {API_KEY} from \"../../const\";\r\nimport uniqueID from '../../helpers/uniqueID';\r\n\r\nconst RandomRecipes = () => {\r\n    const { data, isPending } = useFetch(`https://api.spoonacular.com/recipes/random?apiKey=${API_KEY}&number=5&tags=vegetarian,dessert`);\r\n    \r\n    const [ cards , setCards ] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        if(!isPending){\r\n            const cards = data.recipes.map(data => {\r\n                return <FoodCard key={uniqueID()} data={data} />\r\n            });\r\n            setCards(cards);\r\n        }\r\n    },[isPending,data])\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1>Random</h1>\r\n            <div className=\"main-trend--trending-foods\">\r\n                {cards}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default RandomRecipes;\r\n","import React from 'react';\r\nimport \"./Icon.css\";\r\nimport \"external-svg-loader\";\r\n\r\nconst path = process.env.PUBLIC_URL.concat(\"/assets/icons/\");\r\n\r\n const Icon = ({name,width,height,color}) => {\r\n    return (\r\n        <div className=\"icon\">\r\n            <svg\r\n            data-src={`${path}${name}.svg`}\r\n            fill=\"currentColor\"\r\n            width={width}\r\n            height={height}\r\n            style={{\r\n               color\r\n            }}\r\n            >\r\n            </svg>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nIcon.defaultProps={\r\n    width:\"1.6em\",\r\n    height:\"1.6em\",\r\n    color:\"#666\"\r\n}\r\n\r\nexport default Icon;\r\n","import React from 'react';\r\nimport Icon from '../iconComponent/Icon.jsx';\r\nimport \"./BottomNav.css\";\r\n\r\n\r\n\r\nexport default function BottomNav() {\r\n    return (\r\n        <nav className=\"bottomnav\" >\r\n            <ul>\r\n                <li>\r\n                    <Icon name=\"home\" alt=\"home\" color=\"var(--bg-secundary)\"/>\r\n                </li>\r\n            \r\n                <li>\r\n                     <Icon name=\"cutlery\" alt=\"find recipes\"/>\r\n                </li>\r\n\r\n                <li>\r\n                     <Icon name=\"user\" alt=\"account\"/>\r\n                </li>\r\n                <li>\r\n                     <Icon name=\"recipes\" alt=\"my recipes\"/>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport './RecipeCard.css';\r\n\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport {API_KEY} from \"../../const\";\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst RecipeCard = (props) => {\r\n    const [ img, setImg ] = useState('');\r\n    const [ summary, setSummary ] = useState('');\r\n    const { data, isPending } = useFetch(`https://api.spoonacular.com/recipes/${props.id}/information?apiKey=${API_KEY}`);\r\n\r\n    useEffect(() => { \r\n        !isPending ? setImg(data.image) : setImg('https://spoonacular.com/recipeImages/716429-556x370.jpg')\r\n        \r\n        !isPending ? setSummary(data.summary.replace(/(&nbsp;|<([^>]+)>)/ig, \"\")) : setSummary('No summary')\r\n    }, [isPending, data] );\r\n\r\n    return (\r\n        <Link to='/recipe' className=\"Link\">\r\n            <article className=\"Recipe-Card\">\r\n                <div className=\"Recipe-Card--recipeImage\">\r\n                    <img src={img} alt=\"recipe\" />\r\n                </div>\r\n                <div className=\"Recipe-Card--recipeContent\">\r\n                    <h2>{props.title.substr(0,50)+'..'}</h2>\r\n                    <p>{`${summary.substr(0,55)}...`}</p>\r\n                </div>\r\n            </article>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default RecipeCard;","import React, { Fragment, useEffect, useState } from 'react';\r\nimport './SimilarRecipes.css';\r\n\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport {API_KEY} from \"../../const\";\r\nimport uniqueID from '../../helpers/uniqueID';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport Icon from '../iconComponent/Icon';\r\nimport RecipeCard from '../recipeCard/RecipeCard';\r\n\r\nconst SimilarRecipes = (props) => {\r\n    const { data, isPending } = useFetch(`https://api.spoonacular.com/recipes/${props.id}/similar?apiKey=${API_KEY}&number=4`); \r\n    const [ recipeCards, setRecipeCards ] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if(!isPending){\r\n            const recipeCards = data.map(data => {\r\n                return <RecipeCard key={uniqueID()} id={data.id} title={data.title} />\r\n            });\r\n            setRecipeCards(recipeCards);\r\n        }\r\n    }, [isPending, data]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"main-similar-recipes--header\">\r\n                <h1>It may interest you</h1>\r\n                <Link to=\"/\" className=\"link\">\r\n                    <p>More</p> <Icon name=\"next\" width=\"27\" height=\"27\" color=\"#FFF\" className=\"icon\" />\r\n                </Link>\r\n            </div>\r\n            <div className=\"main-similar-recipes--recipes\">\r\n                {recipeCards}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default SimilarRecipes;","import React, { Fragment } from 'react';\r\nimport './Home.css';\r\n\r\nimport Search from '../../components/Search/Search';\r\nimport Filters from '../../components/filters/Filters'; \r\nimport RandomRecipes from '../../components/randomRecipes/RandomRecipes';\r\nimport BottomNav from '../../components/bottomNav/BottomNav';\r\nimport SimilarRecipes from '../../components/similarRecipes/SimilarRecipes';\r\n\r\nconst Home = () => {\r\n    const onSearch = (query) => {\r\n        console.log(query);\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <header>\r\n                <div className=\"header-search\">\r\n                    <Search onSearch={onSearch} />\r\n                </div>\r\n                <Filters />\r\n            </header>\r\n            <main>\r\n                <article className=\"main-random\">\r\n                    <RandomRecipes />\r\n                </article>\r\n                <article className=\"main-similar\">\r\n                    <SimilarRecipes id=\"209128\" />\r\n                </article>\r\n            </main>\r\n            <BottomNav></BottomNav>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport './RecipeHeader.css';\r\n\r\nconst RecipeHeader = () => {\r\n    return (\r\n        <div>\r\n            Recipe Header\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RecipeHeader;","import React, { Fragment } from 'react';\r\nimport './Recipe.css';\r\n\r\nimport RecipeHeader from '../../components/recipeHeader/RecipeHeader';\r\n\r\nconst Recipe = () => {\r\n    return (\r\n        <Fragment>\r\n            <header>\r\n                <RecipeHeader />\r\n            </header>\r\n            <main>\r\n\r\n            </main>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Recipe;","import React from 'react';\r\nimport './App.css'\r\n\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nimport Home from './pages/Home/Home';\r\nimport Recipe from './pages/Recipe/Recipe';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL} >\r\n      <Route render={({ location }) => (\r\n        <TransitionGroup className=\"container\">\r\n          <CSSTransition appear={true} key={location.key} timeout={{ enter: 400, exit: 200 }} classNames=\"fade\">\r\n            <div className=\"inner\">\r\n              <Switch key={location.key} location={location}>\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route path=\"/recipe\" component={Recipe} />\r\n              </Switch>\r\n            </div>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n      )} />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.jsx';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}